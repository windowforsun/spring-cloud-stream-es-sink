plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.12'
    id 'com.google.cloud.tools.jib' version '3.2.0'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'

group 'com.windowforsun.scs.es.sink.elasticsearch'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
//    springCloudVersion = '2021.0.1'
    springCloudVersion = '2020.0.3'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.kafka:spring-kafka:2.8.1'
    implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.12.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:testcontainers:1.16.3'
    testImplementation 'org.testcontainers:elasticsearch:1.16.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.5'
    testImplementation 'org.awaitility:awaitility:3.0.0'
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // spring cloud stream test
    testImplementation("org.springframework.cloud:spring-cloud-stream") {
        artifact {
            name = "spring-cloud-stream"
            extension = "jar"
            type ="test-jar"
            classifier = "test-binder"
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

jib {
    from {
        image = "openjdk:11-jre-slim"
        platforms {
            // for mac m1
//            platform {
//                architecture = "arm64"
//                os = "linux"
//            }
            // or others
            platform {
                architecture = "amd64"
                os = "linux"
            }
        }
    }
    to {
        image = "windowforsun/elasticsearch-sink"
        tags = [project.findProperty('app_version').toString().toString()]
        auth {
            username = project.findProperty('harbor_username').toString()
            password = project.findProperty('harbor_password').toString()
        }
    }
    container {
        creationTime = Instant.now().toString()
        mainClass = "com.windowforsun.scs.es.sink.elasticsearch.ElasticsearchSinkApplication"
        ports = ["8080"]
    }

}